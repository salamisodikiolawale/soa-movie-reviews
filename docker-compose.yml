version: "3.9"
services:

  ###################################
  ####  SERVICE CLIENT           ####
  ###################################
  client:
    build: 
      context: ./frontend
      dockerfile: Dockerfile_dev
    ports:
      - "3000:3000"
    volumes:
      - type: bind
        source: ./frontend
        target: /src/app
    networks:
      - proxyNetwork

  ###################################
  ####        SERVICE CRUD       ####
  ###################################
  crud_service:
    build: 
      context: ./microservices/CrudMovieService
      dockerfile: Dockerfile_dev
    ports:
      - "3010:3010"
    depends_on:
      - reverse-proxy
    volumes:
      - type: bind
        source: ./microservices/CrudMovieService
        target: /src/app
    labels:
     - "traefik.http.middlewares.validation-auth.forwardauth.address=http://auth_service.localhost/validationAuth"
     - "traefik.http.routers.crud_service.rule=Host(`crud_service.localhost`) && Method(`DELETE`, `POST`, `PUT`, `PATCH`)"
     - "traefik.http.routers.crud_service.middlewares=validation-auth"
     - "traefik.http.routers.crud_service_only_get.rule=Host(`crud_service.localhost`)"
     - "traefik.http.routers.crud_service.entrypoints=web" 
     - "traefik.http.services.crud_service.loadbalancer.server.port=3010"
    environment:
      ME_CONFIG_MONGODB_ADMINUSERNAME: root
      ME_CONFIG_MONGODB_ADMINPASSWORD: example
    networks:
      - proxyNetwork
      - serviceNetwork
      - testNetwork

  ###################################
  ####  SERVICE REVERSE PROXY    ####
  ###################################                                                     
  reverse-proxy:
    image: traefik:v2.8
    command: 
      - "--log.level=DEBUG"
      - "--api.insecure=true"
      - "--providers.docker=true"
      - "--providers.docker.exposedbydefault=true"
      - "--entrypoints.web.address=:80"
    ports:
      - "80:80"
      - "8080:8080"
    volumes:
      - /var/run/docker.sock:/var/run/docker.sock
    networks:
      - proxyNetwork
      - authService

  ###################################
  ####  SERVICE EMAIL            ####
  ###################################
  email_service:
    build: 
      context: ./microservices/EmailService
      dockerfile: Dockerfile_dev
    ports:
      - "3004:3004"
    depends_on: 
      - crud_service
      - reverse-proxy
      - review_service
    volumes:
      - type: bind
        source: ./microservices/EmailService
        target: /src/app
    labels:
     - "traefik.http.middlewares.validation-auth.forwardauth.address=http://auth_service.localhost/validationAuth"
     - "traefik.http.routers.email_service.rule=Host(`email_service.localhost`) && Method(`DELETE`, `POST`, `PUT`, `PATCH`)"
     - "traefik.http.routers.email_service.middlewares=validation-auth"
     - "traefik.http.routers.email_service_only_get.rule=Host(`email_service.localhost`)"
     - "traefik.http.routers.email_service.entrypoints=web" 
     - "traefik.http.services.email_service.loadbalancer.server.port=3004"
    networks:
      - proxyNetwork
      - serviceNetwork


  ###################################
  ####  SERVICE REVIEW           ####
  ###################################
  review_service:
    build: 
      context: ./microservices/ReviewService
      dockerfile: Dockerfile_dev
    ports:
      - "3001:3001"
    depends_on:
      - reverse-proxy
    volumes:
      - type: bind
        source: ./microservices/ReviewService
        target: /src/app
    labels:
     - "traefik.http.middlewares.validation-auth.forwardauth.address=http://auth_service.localhost/validationAuth"
     - "traefik.http.routers.review_service.rule=Host(`review_service.localhost`) && Method(`DELETE`, `POST`, `PUT`, `PATCH`)"
     - "traefik.http.routers.review_service.middlewares=validation-auth"
     - "traefik.http.routers.review_service_only_get.rule=Host(`review_service.localhost`)"
     - "traefik.http.routers.review_service.entrypoints=web" 
     - "traefik.http.services.review_service.loadbalancer.server.port=3001"
    networks:
      - proxyNetwork
      - serviceNetwork
  
  ###################################
  ####  SERVICE SEARCH           ####
  ###################################

  # search_service:
  #   build: ./microservices/SearchService
  #   ports:
  #     - "3002:3002"
  #   networks:
  #     - serviceNetwork

  ###################################
  ####  SERVICE AUTHENTIFICATION ####
  ###################################
  auth_service:
    build:
      context: ./microservices/AuthService
      dockerfile: Dockerfile_dev
    ports:
      - "3003:3003"
    depends_on:
      - reverse-proxy
    volumes:
      - type: bind
        source: ./microservices/AuthService
        target: /src/app
    labels:
     - "traefik.http.routers.auth_service.entrypoints=web" 
     - "traefik.http.routers.auth_service.rule=Host(`auth_service.localhost`)"
     - "traefik.http.services.auth_service.loadbalancer.server.port=3003"
    networks:
      - proxyNetwork
      - authService

  
  mongo:
    container_name: mongo-test-db
    image: mongo
    volumes:
      - ./data-movie-test-db:/data/db
    ports:
      - '27017:27017'
    networks:
      - testNetwork

  mongo-express:
    image: mongo-express
    ports:
      - 8081:8081
    networks:
      - testNetwork

networks:
  authService:
    driver: bridge
  serviceNetwork:
    driver: bridge
  proxyNetwork:
    driver: bridge
  testNetwork:
    driver: bridge
